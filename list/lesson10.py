
# ! リストのメソッドの学習

n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# リストの追加
n.append(11)
print(n)
# ? 実行結果 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]

# リストの先頭に追加
n.insert(0, 0)  # 　インデックス番号を指定することで好きな場所に、追加出来る。
print(n)
# ? 実行結果 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]

# リストから削除する。
n.pop()
print(n)
# ? 実行結果 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# 末尾の11が取り除かれる。

n.pop(0)
print(n)
# ? 実行結果 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# 先頭の０が取り除かれる。

# ? popと同じようにリスト削除に出来るものに、delというメソッドがある。
# ? 同じようにインデックスを指定して削除できるが、popの場合は、指定した値を削除して返す。

# removeを利用して、リストの削除を行う。
n.remove(10)
print(n)
# ? 実行結果 1, 2, 3, 4, 5, 6, 7, 8, 9]
# removeはリストの中の文字を指定して削除できる。インデックス番号が不明でも実行できる。

r = [1, 2, 3, 4, 5, 1, 2, 3]
print(r.index(3))
# ? 実行結果 2
# 3がどのインデックスにあるかを調べている。

# インデックスの場所を指定して、そのインデックスから探す。
print(r.index(3, 3))  # 3を３番目のインデックスから探す。
# ? 実行結果 7


# カウント
print(r.count(3))
# ? 実行結果 2

# split
s = 'My name is Mike'
to_split = s.split(' ')  # ''の中は存在するものでなくてはならない。
print(to_split)
# ? 実行結果 ['My', 'name', 'is', 'Mike']
# スペースで分けてリストに入れてくれる。
